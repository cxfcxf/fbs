name: Build and Publish Release APK

on:
  push:
    tags:
      - 'v*'

# Add permissions to allow release asset uploads
permissions:
  contents: write
  packages: read

jobs:
  build:
    name: Build and Publish Release APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      # Decode the base64 encoded keystore file and save it
      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$ENCODED_KEYSTORE" | tr -d '\n' > keystore_b64
          base64 -d keystore_b64 > keystore.jks
          
      - name: Build Release APK
        env:
          KEYSTORE_FILE: ${{ github.workspace }}/keystore.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Rename APK
        run: |
          mkdir -p artifacts
          cp app/build/outputs/apk/release/fbs.apk artifacts/fbs-${{ steps.get_version.outputs.VERSION }}.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/fbs-${{ steps.get_version.outputs.VERSION }}.apk
          asset_name: fbs-${{ steps.get_version.outputs.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Release APK
          path: artifacts/fbs-${{ steps.get_version.outputs.VERSION }}.apk 